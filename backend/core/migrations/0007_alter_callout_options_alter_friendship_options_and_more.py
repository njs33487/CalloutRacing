# Generated by Django 5.2.3 on 2025-06-29 16:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0006_add_otp_and_password_reset_fields'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='callout',
            options={'ordering': ['-created_at'], 'verbose_name': 'Callout', 'verbose_name_plural': 'Callouts'},
        ),
        migrations.AlterModelOptions(
            name='friendship',
            options={'ordering': ['-created_at'], 'verbose_name': 'Friendship', 'verbose_name_plural': 'Friendships'},
        ),
        migrations.AlterModelOptions(
            name='message',
            options={'ordering': ['-created_at'], 'verbose_name': 'Message', 'verbose_name_plural': 'Messages'},
        ),
        migrations.AlterModelOptions(
            name='notification',
            options={'ordering': ['-created_at'], 'verbose_name': 'Notification', 'verbose_name_plural': 'Notifications'},
        ),
        migrations.AlterModelOptions(
            name='postcomment',
            options={'ordering': ['created_at'], 'verbose_name': 'Post Comment', 'verbose_name_plural': 'Post Comments'},
        ),
        migrations.AlterModelOptions(
            name='raceresult',
            options={'ordering': ['-created_at'], 'verbose_name': 'Race Result', 'verbose_name_plural': 'Race Results'},
        ),
        migrations.AlterModelOptions(
            name='reputationrating',
            options={'ordering': ['-created_at'], 'verbose_name': 'Reputation Rating', 'verbose_name_plural': 'Reputation Ratings'},
        ),
        migrations.AlterModelOptions(
            name='track',
            options={'ordering': ['name'], 'verbose_name': 'Track', 'verbose_name_plural': 'Tracks'},
        ),
        migrations.AlterModelOptions(
            name='userpost',
            options={'ordering': ['-created_at'], 'verbose_name': 'User Post', 'verbose_name_plural': 'User Posts'},
        ),
        migrations.RemoveField(
            model_name='callout',
            name='event',
        ),
        migrations.RemoveField(
            model_name='message',
            name='receiver',
        ),
        migrations.RemoveField(
            model_name='notification',
            name='user',
        ),
        migrations.RemoveField(
            model_name='postcomment',
            name='user',
        ),
        migrations.RemoveField(
            model_name='raceresult',
            name='completed_at',
        ),
        migrations.RemoveField(
            model_name='raceresult',
            name='loser',
        ),
        migrations.RemoveField(
            model_name='raceresult',
            name='loser_speed',
        ),
        migrations.RemoveField(
            model_name='raceresult',
            name='loser_time',
        ),
        migrations.RemoveField(
            model_name='raceresult',
            name='winner',
        ),
        migrations.RemoveField(
            model_name='raceresult',
            name='winner_speed',
        ),
        migrations.RemoveField(
            model_name='raceresult',
            name='winner_time',
        ),
        migrations.AlterUniqueTogether(
            name='reputationrating',
            unique_together={('rater', 'rated_user')},
        ),
        migrations.RemoveField(
            model_name='userpost',
            name='car',
        ),
        migrations.RemoveField(
            model_name='userpost',
            name='likes',
        ),
        migrations.RemoveField(
            model_name='userpost',
            name='user',
        ),
        migrations.AddField(
            model_name='callout',
            name='city',
            field=models.CharField(blank=True, help_text='City', max_length=100),
        ),
        migrations.AddField(
            model_name='callout',
            name='state',
            field=models.CharField(blank=True, help_text='State', max_length=50),
        ),
        migrations.AddField(
            model_name='message',
            name='recipient',
            field=models.ForeignKey(blank=True, help_text='User who received the message', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='recipient',
            field=models.ForeignKey(blank=True, help_text='User receiving the notification', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='related_object_id',
            field=models.IntegerField(blank=True, help_text='ID of related object (post, message, etc.)', null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='sender',
            field=models.ForeignKey(blank=True, help_text='User who triggered the notification', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postcomment',
            name='author',
            field=models.ForeignKey(blank=True, help_text='User who wrote the comment', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postcomment',
            name='likes_count',
            field=models.IntegerField(default=0, help_text='Number of likes'),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='callout',
            field=models.OneToOneField(blank=True, help_text='Associated callout', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='race_result', to='core.callout'),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='challenged_reaction',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Challenged reaction time', max_digits=4, null=True),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='challenged_speed',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Challenged speed (mph)', max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='challenged_time',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Challenged race time', max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='challenger_reaction',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Challenger reaction time', max_digits=4, null=True),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='challenger_speed',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Challenger speed (mph)', max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='challenger_time',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Challenger race time', max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='is_verified',
            field=models.BooleanField(default=False, help_text='Whether race result is verified'),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional race notes'),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='track_conditions',
            field=models.CharField(blank=True, help_text='Track conditions during race', max_length=100),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='verified_by',
            field=models.ForeignKey(blank=True, help_text='User who verified the result', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_races', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='raceresult',
            name='weather_conditions',
            field=models.CharField(blank=True, help_text='Weather conditions during race', max_length=100),
        ),
        migrations.AddField(
            model_name='reputationrating',
            name='rating',
            field=models.IntegerField(blank=True, help_text='Rating from 1 to 5', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='userpost',
            name='author',
            field=models.ForeignKey(blank=True, help_text='User who created the post', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userpost',
            name='comments_count',
            field=models.IntegerField(default=0, help_text='Number of comments'),
        ),
        migrations.AddField(
            model_name='userpost',
            name='is_public',
            field=models.BooleanField(default=True, help_text='Whether post is public'),
        ),
        migrations.AddField(
            model_name='userpost',
            name='likes_count',
            field=models.IntegerField(default=0, help_text='Number of likes'),
        ),
        migrations.AddField(
            model_name='userpost',
            name='post_type',
            field=models.CharField(choices=[('text', 'Text Post'), ('image', 'Image Post'), ('video', 'Video Post'), ('race_result', 'Race Result'), ('car_update', 'Car Update')], default='text', help_text='Type of post', max_length=20),
        ),
        migrations.AddField(
            model_name='userpost',
            name='video',
            field=models.FileField(blank=True, help_text='Post video', null=True, upload_to='posts/videos/'),
        ),
        migrations.AlterField(
            model_name='callout',
            name='challenged',
            field=models.ForeignKey(help_text='User who received the callout', on_delete=django.db.models.deletion.CASCADE, related_name='received_callouts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='callout',
            name='challenger',
            field=models.ForeignKey(help_text='User who sent the callout', on_delete=django.db.models.deletion.CASCADE, related_name='sent_callouts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='callout',
            name='race_type',
            field=models.CharField(choices=[('quarter_mile', 'Quarter Mile'), ('eighth_mile', 'Eighth Mile'), ('roll_race', 'Roll Race'), ('dig_race', 'Dig Race')], help_text='Type of race', max_length=50),
        ),
        migrations.AlterField(
            model_name='callout',
            name='street_location',
            field=models.CharField(blank=True, help_text='Street location if location_type is street', max_length=200),
        ),
        migrations.AlterField(
            model_name='callout',
            name='track',
            field=models.ForeignKey(blank=True, help_text='Track if location_type is track', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='callouts', to='core.track'),
        ),
        migrations.AlterField(
            model_name='callout',
            name='winner',
            field=models.ForeignKey(blank=True, help_text='Winner of the race', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_races', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='friendship',
            name='receiver',
            field=models.ForeignKey(blank=True, help_text='User who received the friend request', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_friend_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='friendship',
            name='sender',
            field=models.ForeignKey(blank=True, help_text='User who sent the friend request', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_friend_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='friendship',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', help_text='Status of the friendship', max_length=20),
        ),
        migrations.AlterField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(blank=True, help_text='User who sent the message', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='notification',
            name='is_read',
            field=models.BooleanField(default=False, help_text='Whether notification has been read'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(choices=[('follow', 'New Follower'), ('friend_request', 'Friend Request'), ('message', 'New Message'), ('like', 'Post Liked'), ('comment', 'Post Commented'), ('callout', 'New Callout'), ('race_result', 'Race Result')], help_text='Type of notification', max_length=20),
        ),
        migrations.AlterField(
            model_name='postcomment',
            name='post',
            field=models.ForeignKey(help_text='Post being commented on', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.userpost'),
        ),
        migrations.AlterField(
            model_name='reputationrating',
            name='comment',
            field=models.TextField(blank=True, help_text='Rating comment'),
        ),
        migrations.AlterField(
            model_name='reputationrating',
            name='rated_user',
            field=models.ForeignKey(blank=True, help_text='User being rated', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_ratings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='reputationrating',
            name='rater',
            field=models.ForeignKey(blank=True, help_text='User giving the rating', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='given_ratings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='userpost',
            name='image',
            field=models.ImageField(blank=True, help_text='Post image', null=True, upload_to='posts/images/'),
        ),
        migrations.RemoveField(
            model_name='reputationrating',
            name='callout',
        ),
        migrations.RemoveField(
            model_name='reputationrating',
            name='overall',
        ),
        migrations.RemoveField(
            model_name='reputationrating',
            name='punctuality',
        ),
        migrations.RemoveField(
            model_name='reputationrating',
            name='rule_adherence',
        ),
        migrations.RemoveField(
            model_name='reputationrating',
            name='sportsmanship',
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField(blank=True, help_text='Reason for blocking')),
                ('blocked', models.ForeignKey(help_text='User being blocked', on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by', to=settings.AUTH_USER_MODEL)),
                ('blocker', models.ForeignKey(help_text='User who is blocking', on_delete=django.db.models.deletion.CASCADE, related_name='blocking', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Block',
                'verbose_name_plural': 'Blocks',
                'ordering': ['-created_at'],
                'unique_together': {('blocker', 'blocked')},
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(help_text='User who is following', on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('following', models.ForeignKey(help_text='User being followed', on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Follow',
                'verbose_name_plural': 'Follows',
                'ordering': ['-created_at'],
                'unique_together': {('follower', 'following')},
            },
        ),
    ]
