# Generated by Django 5.2.3 on 2025-06-27 22:03

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Contact person's name", max_length=100)),
                ('email', models.EmailField(help_text="Contact person's email", max_length=254)),
                ('subject', models.CharField(help_text='Subject of the inquiry', max_length=200)),
                ('message', models.TextField(help_text='Contact message content')),
                ('is_reviewed', models.BooleanField(default=False, help_text='Whether admin has reviewed this submission')),
                ('is_responded', models.BooleanField(default=False, help_text='Whether admin has responded to this submission')),
                ('admin_notes', models.TextField(blank=True, help_text='Admin notes about this submission')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the submission was received')),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='When admin reviewed this submission', null=True)),
                ('responded_at', models.DateTimeField(blank=True, help_text='When admin responded to this submission', null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='eventparticipant',
            name='notes',
        ),
        migrations.AddField(
            model_name='eventparticipant',
            name='is_confirmed',
            field=models.BooleanField(default=False, help_text='Whether participation is confirmed'),
        ),
        migrations.AlterField(
            model_name='callout',
            name='challenged',
            field=models.ForeignKey(help_text='User receiving the challenge', on_delete=django.db.models.deletion.CASCADE, related_name='received_callouts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='callout',
            name='challenger',
            field=models.ForeignKey(help_text='User sending the challenge', on_delete=django.db.models.deletion.CASCADE, related_name='sent_callouts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='callout',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the callout was created'),
        ),
        migrations.AlterField(
            model_name='callout',
            name='event',
            field=models.ForeignKey(blank=True, help_text='Associated event (optional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='callouts', to='core.event'),
        ),
        migrations.AlterField(
            model_name='callout',
            name='location_type',
            field=models.CharField(choices=[('track', 'Track'), ('street', 'Street')], help_text='Type of location for the race', max_length=20),
        ),
        migrations.AlterField(
            model_name='callout',
            name='message',
            field=models.TextField(blank=True, help_text='Message from challenger to challenged'),
        ),
        migrations.AlterField(
            model_name='callout',
            name='race_type',
            field=models.CharField(choices=[('quarter_mile', 'Quarter Mile'), ('eighth_mile', 'Eighth Mile'), ('roll_race', 'Roll Race'), ('dig_race', 'Dig Race')], help_text='Type of race', max_length=50),
        ),
        migrations.AlterField(
            model_name='callout',
            name='scheduled_date',
            field=models.DateTimeField(blank=True, help_text='When the race is scheduled', null=True),
        ),
        migrations.AlterField(
            model_name='callout',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the callout', max_length=20),
        ),
        migrations.AlterField(
            model_name='callout',
            name='street_location',
            field=models.CharField(blank=True, help_text='Street location for street races', max_length=200),
        ),
        migrations.AlterField(
            model_name='callout',
            name='track',
            field=models.ForeignKey(blank=True, help_text='Track for the race (optional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='callouts', to='core.track'),
        ),
        migrations.AlterField(
            model_name='callout',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the callout was last updated'),
        ),
        migrations.AlterField(
            model_name='callout',
            name='wager_amount',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Amount wagered on the race', max_digits=8),
        ),
        migrations.AlterField(
            model_name='callout',
            name='winner',
            field=models.ForeignKey(blank=True, help_text='Winner of the race (if completed)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_races', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='event',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the event was created'),
        ),
        migrations.AlterField(
            model_name='event',
            name='description',
            field=models.TextField(help_text='Detailed description of the event'),
        ),
        migrations.AlterField(
            model_name='event',
            name='end_date',
            field=models.DateTimeField(help_text='When the event ends'),
        ),
        migrations.AlterField(
            model_name='event',
            name='entry_fee',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Entry fee for the event', max_digits=8),
        ),
        migrations.AlterField(
            model_name='event',
            name='event_type',
            field=models.CharField(choices=[('race', 'Race Event'), ('meet', 'Car Meet'), ('show', 'Car Show'), ('test', 'Test & Tune')], help_text='Type of event', max_length=50),
        ),
        migrations.AlterField(
            model_name='event',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether the event is currently active'),
        ),
        migrations.AlterField(
            model_name='event',
            name='is_public',
            field=models.BooleanField(default=True, help_text='Whether the event is public or private'),
        ),
        migrations.AlterField(
            model_name='event',
            name='max_participants',
            field=models.IntegerField(blank=True, help_text='Maximum number of participants allowed', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(help_text='User organizing the event', on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='event',
            name='start_date',
            field=models.DateTimeField(help_text='When the event starts'),
        ),
        migrations.AlterField(
            model_name='event',
            name='title',
            field=models.CharField(help_text='Title of the event', max_length=200),
        ),
        migrations.AlterField(
            model_name='event',
            name='track',
            field=models.ForeignKey(help_text='Track where the event is held', on_delete=django.db.models.deletion.CASCADE, related_name='events', to='core.track'),
        ),
        migrations.AlterField(
            model_name='event',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the event was last updated'),
        ),
        migrations.AlterField(
            model_name='eventparticipant',
            name='car_info',
            field=models.TextField(blank=True, help_text='Information about the car being used'),
        ),
        migrations.AlterField(
            model_name='eventparticipant',
            name='event',
            field=models.ForeignKey(help_text='Event being participated in', on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='core.event'),
        ),
        migrations.AlterField(
            model_name='eventparticipant',
            name='registration_date',
            field=models.DateTimeField(auto_now_add=True, help_text='When the user registered for the event'),
        ),
        migrations.AlterField(
            model_name='eventparticipant',
            name='user',
            field=models.ForeignKey(help_text='User participating in the event', on_delete=django.db.models.deletion.CASCADE, related_name='event_participations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='category',
            field=models.CharField(choices=[('car', 'Car'), ('parts', 'Parts'), ('wheels', 'Wheels & Tires'), ('electronics', 'Electronics'), ('tools', 'Tools'), ('other', 'Other')], help_text='Category of the item', max_length=50),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='condition',
            field=models.CharField(choices=[('new', 'New'), ('like_new', 'Like New'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], help_text='Condition of the item', max_length=20),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='contact_email',
            field=models.EmailField(blank=True, help_text='Contact email address', max_length=254),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='contact_phone',
            field=models.CharField(blank=True, help_text='Contact phone number', max_length=20),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the listing was created'),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='description',
            field=models.TextField(help_text='Detailed description of the item'),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether the listing is active'),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='is_negotiable',
            field=models.BooleanField(default=True, help_text='Whether the price is negotiable'),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='location',
            field=models.CharField(help_text='Location of the item', max_length=200),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='price',
            field=models.DecimalField(decimal_places=2, help_text='Price of the item', max_digits=10),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='seller',
            field=models.ForeignKey(help_text='User selling the item', on_delete=django.db.models.deletion.CASCADE, related_name='marketplace_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='title',
            field=models.CharField(help_text='Title of the item', max_length=200),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='trade_description',
            field=models.TextField(blank=True, help_text='Description of what trades are accepted'),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='trade_offered',
            field=models.BooleanField(default=False, help_text='Whether trade offers are accepted'),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the listing was last updated'),
        ),
        migrations.AlterField(
            model_name='marketplace',
            name='views',
            field=models.IntegerField(default=0, help_text='Number of times the listing has been viewed'),
        ),
        migrations.AlterField(
            model_name='marketplaceimage',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the image was uploaded'),
        ),
        migrations.AlterField(
            model_name='marketplaceimage',
            name='image',
            field=models.ImageField(help_text='Image file', upload_to='marketplace_images/'),
        ),
        migrations.AlterField(
            model_name='marketplaceimage',
            name='is_primary',
            field=models.BooleanField(default=False, help_text='Whether this is the primary image for the item'),
        ),
        migrations.AlterField(
            model_name='marketplaceimage',
            name='marketplace_item',
            field=models.ForeignKey(help_text='Associated marketplace item', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.marketplace'),
        ),
        migrations.AlterField(
            model_name='raceresult',
            name='callout',
            field=models.OneToOneField(help_text='Associated callout', on_delete=django.db.models.deletion.CASCADE, related_name='result', to='core.callout'),
        ),
        migrations.AlterField(
            model_name='raceresult',
            name='completed_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the race was completed'),
        ),
        migrations.AlterField(
            model_name='raceresult',
            name='loser',
            field=models.ForeignKey(help_text='Loser of the race', on_delete=django.db.models.deletion.CASCADE, related_name='race_losses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='raceresult',
            name='loser_speed',
            field=models.DecimalField(blank=True, decimal_places=1, help_text="Loser's trap speed", max_digits=5, null=True),
        ),
        migrations.AlterField(
            model_name='raceresult',
            name='loser_time',
            field=models.DecimalField(blank=True, decimal_places=3, help_text="Loser's race time", max_digits=6, null=True),
        ),
        migrations.AlterField(
            model_name='raceresult',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes about the race'),
        ),
        migrations.AlterField(
            model_name='raceresult',
            name='winner',
            field=models.ForeignKey(help_text='Winner of the race', on_delete=django.db.models.deletion.CASCADE, related_name='race_wins', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='raceresult',
            name='winner_speed',
            field=models.DecimalField(blank=True, decimal_places=1, help_text="Winner's trap speed", max_digits=5, null=True),
        ),
        migrations.AlterField(
            model_name='raceresult',
            name='winner_time',
            field=models.DecimalField(blank=True, decimal_places=3, help_text="Winner's race time", max_digits=6, null=True),
        ),
        migrations.AlterField(
            model_name='track',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the track was added'),
        ),
        migrations.AlterField(
            model_name='track',
            name='description',
            field=models.TextField(blank=True, help_text='Detailed description of the track'),
        ),
        migrations.AlterField(
            model_name='track',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether the track is currently active'),
        ),
        migrations.AlterField(
            model_name='track',
            name='length',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Track length in miles', max_digits=6, null=True),
        ),
        migrations.AlterField(
            model_name='track',
            name='location',
            field=models.CharField(help_text='Location of the track (city, state)', max_length=200),
        ),
        migrations.AlterField(
            model_name='track',
            name='name',
            field=models.CharField(help_text='Name of the racing track', max_length=100),
        ),
        migrations.AlterField(
            model_name='track',
            name='surface_type',
            field=models.CharField(choices=[('asphalt', 'Asphalt'), ('concrete', 'Concrete'), ('dirt', 'Dirt')], help_text='Surface material of the track', max_length=50),
        ),
        migrations.AlterField(
            model_name='track',
            name='track_type',
            field=models.CharField(choices=[('drag', 'Drag Strip'), ('road', 'Road Course'), ('oval', 'Oval Track')], help_text='Type of racing track', max_length=50),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='bio',
            field=models.TextField(blank=True, help_text="User's biography or description", max_length=500),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='car_make',
            field=models.CharField(blank=True, help_text="Make of user's current car", max_length=50),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='car_model',
            field=models.CharField(blank=True, help_text="Model of user's current car", max_length=50),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='car_mods',
            field=models.TextField(blank=True, help_text="Modifications on user's current car"),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='car_year',
            field=models.IntegerField(blank=True, help_text="Year of user's current car", null=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='cover_photo',
            field=models.ImageField(blank=True, help_text="User's cover photo", null=True, upload_to='cover_photos/'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the profile was created'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='location',
            field=models.CharField(blank=True, help_text="User's location (city, state)", max_length=100),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='losses',
            field=models.IntegerField(default=0, help_text='Number of races lost'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='profile_picture',
            field=models.ImageField(blank=True, help_text="User's profile picture", null=True, upload_to='profile_pics/'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='total_races',
            field=models.IntegerField(default=0, help_text='Total number of races participated in'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the profile was last updated'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='wins',
            field=models.IntegerField(default=0, help_text='Number of races won'),
        ),
        migrations.CreateModel(
            name='Bet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bet_type', models.CharField(choices=[('callout', 'Callout Race'), ('event', 'Event Race'), ('tournament', 'Tournament')], max_length=20)),
                ('bet_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('odds', models.DecimalField(decimal_places=2, help_text='Odds ratio (e.g., 2.5 means 2.5x payout)', max_digits=5)),
                ('potential_payout', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('won', 'Won'), ('lost', 'Lost'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payout_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('settled_at', models.DateTimeField(blank=True, null=True)),
                ('actual_winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bets_won', to=settings.AUTH_USER_MODEL)),
                ('bettor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets', to=settings.AUTH_USER_MODEL)),
                ('callout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bets', to='core.callout')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bets', to='core.event')),
                ('selected_winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets_for_winner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BettingPool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('total_pool', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('house_fee_percentage', models.DecimalField(decimal_places=2, default=5.0, help_text='House fee as percentage', max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('is_settled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('settled_at', models.DateTimeField(blank=True, null=True)),
                ('callout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='betting_pools', to='core.callout')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='betting_pools', to='core.event')),
            ],
        ),
        migrations.CreateModel(
            name='MarketplaceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('shipping_address', models.TextField(blank=True)),
                ('shipping_method', models.CharField(blank=True, max_length=50)),
                ('tracking_number', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.marketplace')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MarketplaceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(max_length=200)),
                ('comment', models.TextField()),
                ('is_verified_purchase', models.BooleanField(default=True)),
                ('helpful_votes', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='core.marketplaceorder')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marketplace_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('subscription', 'Subscription'), ('marketplace', 'Marketplace Purchase'), ('wager', 'Race Wager'), ('event_fee', 'Event Entry Fee'), ('refund', 'Refund'), ('withdrawal', 'Withdrawal')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('payment_provider', models.CharField(default='stripe', max_length=50)),
                ('provider_payment_id', models.CharField(blank=True, max_length=255)),
                ('provider_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional payment metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('callout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='core.callout')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='core.event')),
                ('marketplace_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='core.marketplace')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('payment', 'Payment'), ('bet', 'Bet'), ('marketplace', 'Marketplace'), ('race', 'Race'), ('subscription', 'Subscription'), ('system', 'System')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='core.bet')),
                ('callout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='core.callout')),
                ('marketplace_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='core.marketplaceorder')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='core.payment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='marketplaceorder',
            name='payment',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='marketplace_order', to='core.payment'),
        ),
        migrations.AddField(
            model_name='bet',
            name='payment',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bet', to='core.payment'),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_type', models.CharField(choices=[('basic', 'Basic'), ('premium', 'Premium'), ('pro', 'Pro'), ('enterprise', 'Enterprise')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('pending', 'Pending'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Monthly subscription amount', max_digits=8)),
                ('currency', models.CharField(default='USD', help_text='Currency code', max_length=3)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('next_billing_date', models.DateTimeField(blank=True, null=True)),
                ('payment_provider', models.CharField(default='stripe', help_text='Payment provider (stripe, paypal, etc.)', max_length=50)),
                ('provider_subscription_id', models.CharField(blank=True, help_text='External subscription ID', max_length=255)),
                ('features', models.JSONField(default=dict, help_text='Features included in this subscription')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='payment',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='core.subscription'),
        ),
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('daily_limit', models.DecimalField(decimal_places=2, default=1000, max_digits=10)),
                ('monthly_limit', models.DecimalField(decimal_places=2, default=10000, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
