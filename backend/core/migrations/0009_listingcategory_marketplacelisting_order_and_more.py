# Generated by Django 4.2.10 on 2025-06-30 15:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0008_mark_tables_existing'),
    ]

    operations = [
        migrations.CreateModel(
            name='ListingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Category description')),
                ('parent', models.ForeignKey(blank=True, help_text='Parent category', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.listingcategory')),
            ],
            options={
                'verbose_name_plural': 'Listing categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MarketplaceListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Listing title', max_length=200)),
                ('description', models.TextField(help_text='Listing description')),
                ('price', models.DecimalField(decimal_places=2, help_text='Item price', max_digits=10)),
                ('condition', models.CharField(choices=[('new', 'New'), ('used', 'Used'), ('refurbished', 'Refurbished')], help_text='Item condition', max_length=20)),
                ('location', models.CharField(help_text='Item location', max_length=200)),
                ('is_negotiable', models.BooleanField(default=True, help_text='Whether price is negotiable')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(help_text='Listing category', on_delete=django.db.models.deletion.CASCADE, to='core.listingcategory')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marketplace_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total order amount', max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', help_text='Order status', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='racingcrew',
            options={'ordering': ['name'], 'verbose_name': 'Racing Crew', 'verbose_name_plural': 'Racing Crews'},
        ),
        migrations.AlterUniqueTogether(
            name='crewmembership',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='racingcrew',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='racingcrew',
            name='founded_date',
        ),
        migrations.RemoveField(
            model_name='racingcrew',
            name='is_verified',
        ),
        migrations.RemoveField(
            model_name='racingcrew',
            name='logo',
        ),
        migrations.RemoveField(
            model_name='racingcrew',
            name='max_members',
        ),
        migrations.RemoveField(
            model_name='racingcrew',
            name='member_count',
        ),
        migrations.RemoveField(
            model_name='racingcrew',
            name='requirements',
        ),
        migrations.RemoveField(
            model_name='racingcrew',
            name='rules',
        ),
        migrations.RemoveField(
            model_name='racingcrew',
            name='social_media',
        ),
        migrations.RemoveField(
            model_name='racingcrew',
            name='website',
        ),
        migrations.AddField(
            model_name='crewmembership',
            name='member',
            field=models.ForeignKey(blank=True, help_text='Crew member', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crew_memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='racingcrew',
            name='crew_type',
            field=models.CharField(choices=[('drag_racing', 'Drag Racing'), ('street_racing', 'Street Racing'), ('track_racing', 'Track Racing'), ('car_club', 'Car Club'), ('modification', 'Modification Crew'), ('other', 'Other')], default='car_club', help_text='Type of crew', max_length=20),
        ),
        migrations.AddField(
            model_name='racingcrew',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='Crew owner', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_crews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='crewmembership',
            name='crew',
            field=models.ForeignKey(help_text='Crew being joined', on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='core.racingcrew'),
        ),
        migrations.AlterField(
            model_name='crewmembership',
            name='joined_at',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='When member joined'),
        ),
        migrations.AlterField(
            model_name='crewmembership',
            name='role',
            field=models.CharField(choices=[('member', 'Member'), ('officer', 'Officer'), ('leader', 'Leader'), ('founder', 'Founder')], default='member', help_text='Member role', max_length=20),
        ),
        migrations.AlterField(
            model_name='crewmembership',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('active', 'Active'), ('inactive', 'Inactive')], default='pending', help_text='Membership status', max_length=20),
        ),
        migrations.AlterUniqueTogether(
            name='crewmembership',
            unique_together={('crew', 'member')},
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(help_text='Street address', max_length=200)),
                ('city', models.CharField(help_text='City', max_length=100)),
                ('state', models.CharField(help_text='State', max_length=50)),
                ('zip_code', models.CharField(help_text='ZIP code', max_length=20)),
                ('country', models.CharField(default='USA', help_text='Country', max_length=100)),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default address')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Shipping addresses',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(help_text='Review rating', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(help_text='Review title', max_length=200)),
                ('content', models.TextField(help_text='Review content')),
                ('is_verified_purchase', models.BooleanField(default=False, help_text='Whether this is a verified purchase')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='core.marketplacelisting')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=10)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('purchase', 'Purchase'), ('refund', 'Refund')], help_text='Type of transaction', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', help_text='Transaction status', max_length=20)),
                ('payment_method', models.CharField(blank=True, help_text='Payment method used', max_length=50)),
                ('reference', models.CharField(blank=True, help_text='Transaction reference', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, help_text='Item quantity')),
                ('price', models.DecimalField(decimal_places=2, help_text='Item price at time of purchase', max_digits=10)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.marketplacelisting')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.order')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.shippingaddress'),
        ),
        migrations.CreateModel(
            name='ListingImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Listing image', upload_to='marketplace_images/')),
                ('caption', models.CharField(blank=True, help_text='Image caption', max_length=200)),
                ('is_primary', models.BooleanField(default=False, help_text='Whether this is the primary image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.marketplacelisting')),
            ],
            options={
                'ordering': ['-is_primary', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CarListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Car listing title', max_length=200)),
                ('description', models.TextField(help_text='Car description')),
                ('make', models.CharField(help_text='Car make', max_length=100)),
                ('model', models.CharField(help_text='Car model', max_length=100)),
                ('year', models.IntegerField(help_text='Car year')),
                ('price', models.DecimalField(decimal_places=2, help_text='Car price', max_digits=10)),
                ('mileage', models.IntegerField(help_text='Car mileage')),
                ('condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], help_text='Car condition', max_length=20)),
                ('location', models.CharField(help_text='Car location', max_length=200)),
                ('is_negotiable', models.BooleanField(default=True, help_text='Whether price is negotiable')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='crewmembership',
            name='invited_by',
        ),
        migrations.RemoveField(
            model_name='crewmembership',
            name='notes',
        ),
        migrations.RemoveField(
            model_name='crewmembership',
            name='user',
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(help_text='Rating from 1 to 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, help_text='Rating comment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings_given', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('rater', 'seller')},
            },
        ),
    ]
